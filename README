====================================================================================================
Собеседование на позицию junior/middle developer
====================================================================================================
https://metanit.com/sharp/interview/1.1.php
====================================================================================================

----------------------------------------------------------------------------------------------------
Вопрос 1
--------
Есть следующие объявления классов A и B:
class A
{
    virtual void Foo()
    {
        Console.Write("Class A");
    }
}
class B: A
{
    override void Foo()
    {
        Console.Write("Class B");
    }
}
----------------------------------------------------------------------------------------------------
Что выведут на консоль такие вызовы метода Foo():
-------------------------------------------------
B obj1 = new A();
obj1.Foo();
 
B obj2 = new B();
obj2.Foo();
 
A obj3 = new B();
obj3.Foo();
----------------------------------------------------------------------------------------------------
Ответ.
1. Ошибка. "A.Foo()": виртуальные и абстрактные члены не могут быть закрытыми.
- Нужен модификатор доступа public.
2. Ошибка. "B.Foo()": виртуальные и абстрактные члены не могут быть закрытыми.
- Нужен модификатор доступа public.
3. Ошибка. Не удается неявно преобразовать тип "Question_01.A" в "Question_01.B". 
Существует явное преобразование (возможно, пропущено приведение типов).
- A obj1 = new A();
====================================================================================================

Вопрос 2
--------
Есть следующая структура:
public struct S : IDisposable
{
    private bool dispose;
    public void Dispose()
    {
        dispose = true;
    }
    public bool GetDispose()
    {
        return dispose;
    }
}
----------------------------------------------------------------------------------------------------
Что будет выведено в следующем случае:
--------------------------------------
var s = new S();
using (s)
{
    Console.WriteLine(s.GetDispose());
}
Console.WriteLine(s.GetDispose());

Варианты ответов:
true, true
true, false
false, true
false, false
----------------------------------------------------------------------------------------------------

Ответ.
false, false
====================================================================================================
